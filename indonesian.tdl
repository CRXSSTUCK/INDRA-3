;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of Indonesian
;;; created at:
;;;     Wed Apr 22 13:14:22 UTC 2015
;;; based on Matrix customization system version of:
;;;     Fri Feb  6 23:12:14 UTC 2015
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; SSH 2014-10-24: for chart mapping
;; MATRIX REDEFINITION
;; make STEM of type orthog(raphy) to pass up from/to/form
sign-min := avm &
  [ STEM orthog ].

orthog := cons &
  [ FROM string,
    TO string ].

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;; DVM 2015-08-18: added mrs
hook :+ 
 [ SPEAKER-KEY ref-ind,
   HEARER-KEY ref-ind ].

quant_rel := predsort.
pron_rel := predsort.
def_q_rel := quant_rel.
the_q_rel := def_q_rel.
exist_q_rel := quant_rel.
poss_rel := quant_rel.
pronoun_q_rel := quant_rel.

;; DVM 2015-05-09: added decomposed words
demon_q_rel := quant_rel.
proximal_q_rel := demon_q_rel.
dist_q_rel := demon_q_rel.
medial_q_rel := dist_q_rel.
remote_q_rel  := dist_q_rel.

generic_n_rel := predsort.
entity_n_rel := generic_n_rel.
person_n_rel := entity_n_rel.
benda_n_rel := entity_n_rel.
hal_n_rel := entity_n_rel.
time_n_rel  := generic_n_rel.
; where
place_n_rel  := generic_n_rel.
; why
reason_n_rel := generic_n_rel.
; how
manner_n_rel := generic_n_rel.

;; FCB & DVM 2016-02-17 : semantic hierarchy for copulas
copula_v_rel := predsort.
cop_v_zero_rel := copula_v_rel.
_cop_v_ialah_rel := copula_v_rel.
_cop_v_adalah_rel := copula_v_rel.
_cop_v_merupakan_rel := copula_v_rel.
_cop_v_menjadi_rel := copula_v_rel.

;; DVM 2016-05-17: make "neg_rel" as a type
neg_rel := predsort.

;; DVM 2016-05-17: added from zhong.tdl for noun-noun compound (cpd)
cpd := icons.
noun-noun := cpd.

;; DVM 2015-08-18: added from zhong.tdl
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SSH 2015-05-24
;; CTXT (Honorification)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

dialogue := icons.
addressor := dialogue.
addressee := dialogue.
rank := icons.
higher-or-equal := rank.
lower-or-equal := rank.
higher := higher-or-equal.
lower := lower-or-equal.
equal :=  higher-or-equal & lower-or-equal.

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

head :+ [ HONORIFIC luk,
          AUX bool,
          FORM form,
          MODIFIABLE bool,
          EMPTY bool ].

; This grammar includes head-modifier rules.  To keep
; out extraneous parses, constrain the value of MOD on
; various subtypes of head.  This may need to be loosened later.
; This constraint says that only adverbs, adjectives,
; and adpositions can be modifiers.

topic-comment :+ [ SYNSEM.L-PERIPH +, NON-HEAD-DTR.SYNSEM.L-PERIPH + ].

+nvcdmo :+ [ MOD < > ].

inflected :+ [ VOICE-FLAG luk ].

infl-satisfied :+ [ VOICE-FLAG na-or-+ ].

png :+ [ PERNUM pernum,
         ANIMACY animacy ].

basic-head-comp-phrase :+ [ SYNSEM.LOCAL.CAT.MC #mc,
                            HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-mod-phrase-simple :+ [ SYNSEM.LOCAL.CAT.MC #mc,
                                  NON-HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

;;;;;;;;;;;;;;
;;; Features
;;;;;;;;;;;;;;

;;; Pernum

pernum := *top*.
sg := pernum.
pl := pernum.
1st := pernum.
2nd := pernum.
3rd := pernum.
1sg := 1st & sg.
2sg := 2nd & sg.
3sg := 3rd & sg.
1pl := 1st & pl.
1pl_incl := 1pl.
1pl_excl := 1pl.
2pl := 2nd & pl.
3pl := 3rd & pl.
indet := pernum.
1indet := 1st & indet.
2indet := 2nd & indet.
3indet := 3rd & indet.

;;; Animacy

animacy := *top*.
animate := animacy.
inanimate := animacy.
human := animate.
non-human := animate.

;;; Form

form := *top*.
nonfinite := form.
finite := form.

;;; Tense
;; FCB & DVM 2015-10-28: added nonfuture for copula constructions

future := tense.
nonfuture := tense.

;;; Aspect
;; FCB & DVM 2015-10-28: added nonaspect for copula constructions

perf := aspect.
prog := aspect.
perf-and-prog := perf & prog.
nonaspect := aspect.

;;; Noun
;; DVM 2016-02-13: separate proper names and pronouns from other nouns for copula verb "merupakan"

commonnoun := noun.
propername := noun.
pronoun := noun.

;; DVM 2017-03-23: separate 3rd person pronouns and non 3rd person pronouns for passive type 1 and 2
pronoun-3person := pronoun.
pronoun-non3person := pronoun.

3person-noun := commonnoun & propername & pronoun-3person.

prep_rel := predsort.
compound_p_rel := prep_rel.

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Noun

noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < #spr &
                                 [ LOCAL.CAT.HEAD det ] >,
                           COMPS < >,
                           SUBJ < >,
                           SPEC < > ],
    ARG-ST < #spr > ].

no-spr-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPR < [ OPT + ] > ].

; Nouns which cannot take specifiers mark their SPR requirement
; as OPT +.  Making the non-head daughter OPT - in this rule
; keeps such nouns out.
; 
; Rules for building NPs.  Note that the Matrix uses SPR for
; the specifier of nouns and SUBJ for the subject (specifier) of verbs.

head-spec-phrase := basic-head-spec-phrase & head-initial &
  [ NON-HEAD-DTR.SYNSEM.OPT - ].

common-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

;; DVM 2016-02-13: change the HEAD from "noun" to "propername"
;; DVM 2016-02-16: added the information of PERNUM sg
proper-name-lex := basic-one-arg & basic-icons-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD propername,
			   VAL [ COMPS < >,
				 SUBJ < >,
				 SPR < > ] ],
		     CONT [ HOOK.INDEX #index &
					[ PNG.PERNUM sg ],
			    RELS <! relation & #keyrel & 
				  [ LBL #larg,
				    ARG0 #index ],
				  quant-relation &
				  [ PRED "proper_q_rel",
				    ARG0 #index,
				    RSTR #harg ] !>,
			    HCONS <! qeq & 
				   [ HARG #harg,
				     LARG #larg ] !> ] ],
	     NON-LOCAL.SLASH 0-dlist,
	     LKEYS.KEYREL #keyrel & named-relation ] ].

;hon-lex := lex-item &
;  [ SYNSEM.LOCAL.CAT.HEAD.HON + ].

basic-pronoun-lex :=  basic-one-arg & norm-hook-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD pronoun & [ MOD <> ],
                           VAL [ COMPS < >,
                                 SUBJ < >,
                                 SPR < > ] ],
                     CONT [ RELS.LIST.FIRST #rel ] ],
             LKEYS.KEYREL noun-relation & #rel & [ PRED "pronoun_n_rel" ] ] ].

pronoun-lex := basic-pronoun-lex & no-hcons-lex-item & 
               basic-icons-lex-item &
  [ SYNSEM.LOCAL.CONT.RELS <! relation !> ].

;; DVM 2015-08-18: added from zhong-lextypes.tdl
;; from here
personal-pronoun-lex := basic-pronoun-lex &
  [ SYNSEM.LOCAL.CONT [ RELS <! relation & [ARG0 #x, LBL #h], 
			    [ PRED pronoun_q_rel,
				ARG0 #x, RSTR #h2 ] !> ,
                        HCONS <! qeq & [ LARG #h, HARG #h2 ] !>  ] ].

speaker-lex-item := basic-icons-lex-item &
  [ SYNSEM.LOCAL.CONT.HOOK [ INDEX #index,
			     SPEAKER-KEY #index ] ].

non-honorific-hearer-lex-item := basic-icons-lex-item & 
  [ SYNSEM.LOCAL.CONT.HOOK [ INDEX #index,
			     HEARER-KEY #index ] ].

honorific-hearer-lex-item := lex-item & 
  [ SYNSEM.LOCAL.CONT [ HOOK [ INDEX #index,
			       SPEAKER-KEY #skey,
			       HEARER-KEY #index ],
			ICONS <! higher & [ IARG1 #skey,
					    IARG2 #index ] !> ] ].
;; until here

;pronoun-noun-lex := noun-lex.

inanimate-noun-noun-lex := common-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.ANIMACY inanimate ].

inanimate-plural-noun-lex := inanimate-noun-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM pl ].

animate-noun-noun-lex := common-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.ANIMACY animate ].

nonhuman-noun-noun-lex := animate-noun-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.ANIMACY non-human ].

nonhuman-plural-noun-lex := nonhuman-noun-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM pl ].

human-noun-noun-lex := animate-noun-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.ANIMACY human ].

human-plural-noun-lex := human-noun-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM pl ].

;proper-noun-lex := noun-lex &
;  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

;; DVM 2015-05-09: pronoun-noun-lex is changed to pronoun-lex
;; DVM 2015-05-09: pronouns cannot be modified by adjectives
;; DVM 2015-08-18: made some modifications, based on zhong-letypes.tdl

;pronoun-1st-sg-nohon-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 1sg,
;                   CAT.HEAD.HONORIFIC - ] ].

pronoun-1st-sg-nohon-noun-lex := personal-pronoun-lex & speaker-lex-item & 
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-non3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 1sg ] ].

;pronoun-1st-sg-hon-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 1sg,
;                   CAT.HEAD.HONORIFIC + ] ].

pronoun-1st-sg-hon-noun-lex := personal-pronoun-lex & speaker-lex-item & 
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-non3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 1sg ] ].

;pronoun-1st-pl-incl-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 1pl_incl ].

pronoun-1st-pl-incl-noun-lex := personal-pronoun-lex & basic-icons-lex-item &
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-non3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 1pl_incl ] ].

;pronoun-1st-pl-excl-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 1pl_excl ].

pronoun-1st-pl-excl-noun-lex :=  personal-pronoun-lex & basic-icons-lex-item &
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-non3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 1pl_excl ] ].

;pronoun-2nd-sg-nohon-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 2sg,
;                   CAT.HEAD.HONORIFIC - ] ].

pronoun-2nd-sg-nohon-noun-lex := personal-pronoun-lex & non-honorific-hearer-lex-item & 
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-non3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 2sg ] ].

;pronoun-2nd-sg-hon-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 2sg,
;                   CAT.HEAD.HONORIFIC + ] ].

pronoun-2nd-sg-hon-noun-lex := personal-pronoun-lex & honorific-hearer-lex-item &
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-non3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 2sg ] ].

;pronoun-3rd-sg-nohon-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 3sg,
;                   CAT.HEAD.HONORIFIC - ] ].

pronoun-3rd-sg-nohon-noun-lex := personal-pronoun-lex & non-honorific-hearer-lex-item &
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 3sg ] ].

;pronoun-3rd-sg-hon-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 3sg,
;                   CAT.HEAD.HONORIFIC + ] ].

pronoun-3rd-sg-hon-noun-lex := personal-pronoun-lex & honorific-hearer-lex-item &
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 3sg ] ].

;pronoun-2nd-pl-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 2pl ].

pronoun-2nd-pl-noun-lex := personal-pronoun-lex & non-honorific-hearer-lex-item & 
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-non3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 2pl ] ].

;pronoun-3rd-pl-noun-lex := pronoun-lex &
;  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3pl ].

pronoun-3rd-pl-noun-lex := personal-pronoun-lex & basic-icons-lex-item &
  [ SYNSEM.LOCAL [ CAT.HEAD pronoun-3person,
                   CONT.HOOK.INDEX.PNG.PERNUM 3pl ] ].

;; DVM 2015-05-09: demonstratives
;; DVM 2015-05-09: pronoun-noun-lex is changed to no-spr-noun-lex
;; demonstratives cannot be modified by adjectives
;; ini tua "old this" is considered not grammatical

demonstrative-pronoun-noun-lex := no-spr-noun-lex.

demonstrative-pronoun-pl-noun-lex := no-spr-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3pl ].

;;; Verbs

; verb-lex is HC-LIGHT - to allow us to pick out
; 
;   lexical Vs for V-level attachment of negative adverbs.

verb-lex := non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD verb,
                       HC-LIGHT - ] ].

indonesian-verb-lex := verb-lex & 
  [ SYNSEM.LOCAL [ CAT [ HEAD.AUX -,
                         VAL [ SPR < >,
                               SPEC < >,
                               SUBJ < #subj > ] ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT.VAL [ SPR < >,
                                     COMPS < > ],
                           CONT.HOOK.INDEX #xarg ] ] ].

main-verb-lex := indonesian-verb-lex & basic-verb-lex.

aux-lex := verb-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.AUX + ].

intransitive-verb-lex := main-verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

transitive-verb-lex := main-verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

; DVM 2017-03-23: for passive type 1
passive-verb-lex := basic-two-arg-no-hcons & basic-icons-lex-item & main-verb-lex &
   [ ARG-ST < [ LOCAL [ CAT [ HEAD noun,
                              VAL [ SPR < >,
                                    COMPS < > ] ],
                        CONT.HOOK [ INDEX ref-ind & #ind1,
			 	    ICONS-KEY.IARG1 #clause ] ] ],
              #comps &
	      [ LOCAL [ CAT [ HEAD 3person-noun,
                              VAL [ SPR < >,
                                    COMPS < > ] ],
                        CONT.HOOK [ INDEX ref-ind & #ind2,
				  ICONS-KEY.IARG1 #clause ] ] ] >,
     SYNSEM [ LKEYS.KEYREL [ ARG1 #ind2,
			     ARG2 #ind1 ],
	      LOCAL [ CAT.VAL.COMPS < #comps >,
                      CONT.HOOK.CLAUSE-KEY #clause ] ] ].

; DVM 2017-03-23: the old tr-verb-lex
;tr-verb-lex := transitive-verb-lex &
;  [ INFLECTED.VOICE-FLAG - ].

; DVM 2017-03-23: the new tr-verb-lex
tr-verb-lex := basic-two-arg-no-hcons & basic-icons-lex-item & basic-verb-lex &
  [ INFLECTED.VOICE-FLAG - ].

intr-verb-lex := intransitive-verb-lex.

opt-tr-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT + ].

no-obj-drop-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

obj-drop-verb-lex := transitive-verb-lex.

;;; Auxiliaries

subj-raise-aux := aux-lex & trans-first-arg-raising-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             COMPS < #comps >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun,
                             VAL [ SUBJ < >,
                                   SPR < >,
                                   SPEC < >,
                                   COMPS < > ] ],
                       CONT.HOOK.INDEX #xarg ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ SUBJ < [ ] >,
                                 COMPS < >,
                                 SPR 0-1-list,
                                 SPEC < > ],
                           HEAD +vjp ] ] > ].

subj-raise-aux-with-pred := subj-raise-aux & norm-sem-lex-item & trans-first-arg-raising-lex-item-1.

subj-raise-aux-no-pred := subj-raise-aux & raise-sem-lex-item & no-icons-lex-item & 
  [ ARG-ST < [ ], [ LOCAL.CAT.HEAD.AUX - ] > ].

aspect_perf-aux-lex := subj-raise-aux-no-pred & 
  [ SYNSEM.LOCAL.CAT [ HEAD.FORM finite,
		       VAL [ SPR < >,
			     COMPS.FIRST.LOCAL [ CONT.HOOK.INDEX.E.ASPECT perf,
					         CAT.HEAD.FORM form ] ] ] ].

aspect_prog-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL.CAT [ HEAD.FORM finite,
		       VAL.COMPS.FIRST.LOCAL [ CONT.HOOK.INDEX.E.ASPECT prog,
					       CAT.HEAD.FORM form ] ] ].

modal_fut-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL.CAT [ HEAD.FORM finite,
		       VAL.COMPS.FIRST.LOCAL [ CONT.HOOK.INDEX.E.TENSE future,
					       CAT.HEAD.FORM form ] ] ].

;; DVM 2015-05-09: subj-raise-aux-with-pred is commented out
;; DVM 2015-05-09: saya sedang "I am in the process of" is considered ungrammatical

;aspect_perf-aux-lex := subj-raise-aux-with-pred &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT perf,
;                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM form ] ].

;aspect_prog-aux-lex := subj-raise-aux-with-pred &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT prog,
;                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM form ] ].

modal-aux-lex := subj-raise-aux-with-pred &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM form ].

;modal-future-aux-lex := subj-raise-aux-with-pred &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.TENSE future,
;                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM form ] ].

;;; Adjectives

basic-adjective-lex :+
 [ SYNSEM.LOCAL.CAT.VAL.SPR < [ LOCAL.CAT.HEAD adv ] > ].

;; DVM 2015-05-09: got from new grammar matrix in April 2015
;adj-lex := basic-int-mod-adj-lex.

; Stative predicate adjective definition
;; FCB & DVM 2016-02-10 : the predicative adjective was made as the basic
;; SSH & DVM 2016-02-17 : connect the argument one of adj complement with the noun subject
adj-adp-pred-lex := intransitive-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SUBJ < #subj & 
				    [ LOCAL [ CONT.HOOK.INDEX #x1,
                                              CAT [ VAL [ SPR < >,
                                                          COMPS < > ],
                                                    HEAD noun ] ] ] >,
			      COMPS < > ],
                   CONT.HOOK.XARG #x1 ],
    ARG-ST.FIRST #subj ].

adjective-lex := adj-adp-pred-lex & basic-nomod-adj-lex.

;; DVM 2015-05-09: from the previous version of INDRA
;; FCB & DVM 2016-02-10 : adjective-lex was changed to adj-mod-lex
mod-attr-lex := intersective-mod-lex & norm-ltop-lex-item & intransitive-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT [ HEAD noun,
                                                    VAL.SPR cons ]]>,
			   VAL [ SUBJ < >,
			         COMPS < >,
			         SPEC < > ],
			   POSTHEAD + ]]]].

adj-mod-lex := basic-adjective-lex & mod-attr-lex.

;; FCB & DVM 2016-02-10 : const-lex-rule copies the stems up, not changing the stem
;; FCB & DVM 2016-02-10 : a rule which changes predicative adjective to attributive adjective
adj-to-attr-rule := const-lex-rule &
		    same-cont-lex-rule & 
		    same-ctxt-lex-rule &
		    same-agr-lex-rule &
		    adj-mod-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CONT.HOOK.INDEX #x1 ] > ] ] ],
    DTR adjective-lex &
    [ SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ < [ LOCAL.CONT.HOOK.INDEX #x1 ] > ] ] ] ] ] ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

adjective-quant-lex := basic-nomod-adj-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SUBJ < #subj & 
				    [ LOCAL [ CONT.HOOK.INDEX #x1,
                                              CAT [ VAL [ SPR < >,
                                                          COMPS < > ],
                                                    HEAD noun ] ] ] >,
			      COMPS < > ],
                   CONT.HOOK.XARG #x1 ],
    ARG-ST.FIRST #subj ].

adj-mod-quant-lex := basic-adjective-lex & intersective-mod-lex & norm-ltop-lex-item & intransitive-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT [ HEAD noun,
                                                    VAL.COMPS cons ]]>,
			   VAL [ SUBJ < >,
			         COMPS < >,
			         SPEC < > ],
			   POSTHEAD - ]]]].

adj-to-attr-quant-rule := const-lex-rule &
		    same-cont-lex-rule & 
		    same-ctxt-lex-rule &
		    same-agr-lex-rule &
		    adj-mod-quant-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CONT.HOOK.INDEX #x1 ] > ] ] ],
    DTR adjective-quant-lex &
    [ SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ < [ LOCAL.CONT.HOOK.INDEX #x1 ] > ] ] ] ] ] ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Numbers
;; DVM 2015-05-09: from Zhong

;adj :+ [ CARDINAL bool ].
head-min := avm & [ CARDIN bool ].

card_rel := named_rel.

card-relation := arg1-relation & named-relation &
  [ PRED card_rel ].

;adj-head-int-phrase :+
;  [ HEAD-DTR.SYNSEM.L-PERIPH - ].

; DVM 2017-02-10 VAL.SPR < > not cons, if cons, there will be two parses for "dua apel merah"
; [[dua apel] merah] and [dua [apel merah]]
; if < >, only [dua [apel merah]] is parsed
; DVM 2017-02-21 added XARG and #xarg
; DVM 2017-03-03 added MODIFIED notmod-or-rmod & [ PERIPH na-or-+ ] based on erg/lextypes.tdl
; so that there will be no two parses for dua puluh dua buku: omit this [[dua puluh] [[dua] [buku]]]
; get only this [[dua puluh dua] [buku]]
a_-_num_le := single-rel-lex-item & basic-icons-lex-item & 
  [ SYNSEM [ LOCAL [ CAT [ HEAD adj & [ MOD < [ MODIFIED notmod-or-rmod & [ PERIPH na-or-+ ],
                                                LOCAL [ CAT [ HEAD noun & [ CARDIN - ],
              	                                              VAL.SPR cons ],
                                                        CONT.HOOK.INDEX #xarg ] ] > ],
                           VAL [ COMPS < >,
                                 SPR < >,
				 SUBJ < > ],
	                   POSTHEAD - ],
		     CONT [ HOOK [ LTOP #lbl,
                                   XARG #xarg ],
			    RELS <! #rel !>,
			    HCONS <! !> ] ],
	     NON-LOCAL.SLASH 0-dlist,
	     LKEYS.KEYREL card-relation & #rel & [ LBL #lbl,
						   ARG1 #xarg ] ] ].

a_-_num-sg_le := a_-_num_le &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM sg ].

a_-_num-pl_le := a_-_num_le &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM pl ].

;;; Classifiers
;; DVM 2017-02-21: added classifiers, based on Zhong

#|
basic-classifier-lex := norm-ltop-lex-item & single-rel-lex-item & 
                        intersective-mod-lex & no-icons-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD classifier & 
				[ KEYS.KEY #sense,
				  MOD < [ LOCAL [ CONT.HOOK [ INDEX #index,
							      LTOP #ltop ],
						  CAT [ HEAD noun & [ KEYS.KEY #sense ],
							VAL.SPR < [] > ] ] ] > ], 
			   VAL [ SPR < [ LOCAL [ CAT [ VAL [ COMPS < >,
							     SUBJ < > ],
						       HEAD num & 
							   [ MOD < > ] ],
						 CONT.HOOK [ LTOP #ltop,
							     INDEX #index ]]]>,
				 SUBJ < >,
				 COMPS < > ],
			   POSTHEAD - ],
		     CONT.HOOK [ INDEX #index & ref-ind,
				 LTOP #ltop ] ],          
	     NON-LOCAL.SLASH 0-dlist,
	     LKEYS.KEYREL [ PRED #sense,
			    ARG1 #index ] ] ].
|#

classifier := +jd.

basic-classifier-lex := norm-ltop-lex-item & single-rel-lex-item & 
                        intersective-mod-lex & no-icons-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD classifier &
                                [ KEYS.KEY #sense,
				  MOD < [ LOCAL [ CAT [ HEAD noun & [ KEYS.KEY #sense ],
							VAL.SPR < [] > ] ] ] > ], 
                           VAL [ COMPS < >,
                                 SPR < [ LOCAL [ CAT [ HEAD adj,
                                                       VAL [ COMPS < >,
                                                             SUBJ < > ] ],
                                                 CONT.HOOK [ LTOP #lbl,
                                                             XARG #xarg ] ] ] >,
				 SUBJ < > ] ],
		     CONT [ HOOK [ LTOP #lbl,
                                   XARG #xarg ],
			    RELS <! #rel !>,
			    HCONS <! !> ] ],
	     NON-LOCAL.SLASH 0-dlist,
	     LKEYS.KEYREL #rel & [ LBL #lbl,
				   ARG1 #xarg ] ] ].

classifier-lex := basic-classifier-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPR < [ OPT - ] > ].

cl-inanim-le := classifier-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.ANIMACY inanimate ].

cl-nonhum-le := classifier-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.ANIMACY non-human ].

cl-hum-le := classifier-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.ANIMACY human ].

; DVM 2017-02-21 from Zhong, also check rules.tdl
head-spec-h-sem-phrase := basic-head-spec-phrase & head-final &
  [ SYNSEM.LOCAL.CAT.HEAD.MODIFIABLE +,
    HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD +jrpd & [ MODIFIABLE + ],
                            CONT.HOOK #hook ],
    C-CONT.HOOK #hook ].

;;; Others

;;; Determiners
;;; SPEC is non-empty, and already specified by basic-determiner-lex.

determiner-lex := basic-determiner-lex & basic-zero-arg & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < >,
                           COMPS < >,
                           SUBJ < > ] ].

determiner-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

determiner-pl-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3pl ].

; Type for negative adverbs.
; 
; This adverb should go through a specialized phrase structure rule
;        included with this grammar.

;; DVM 2015-09-23: added CONT.HOOK.XARG #xarg to connect the ARG1 of the verb with ARG0 of the subj
;; DVM & FCB 2016-05-17: add INDEX.E.ASPECT perf-and-prog so that "tidak adalah" cannot be parsed
;; because "adalah" and "ialah" have ASPECT nonaspect.
;; DVM 2016-09-30: HEAD.MOD < LOCAL.CAT.HEAD is changed from verb to +vjp so that "tidak" can negate AdjP and PP
neg-adv-lex := basic-scopal-adverb-lex &
  [ SYNSEM.LOCAL [ CONT.HOOK.XARG #xarg,
		   CAT [ VAL [ SPR < >,
                               COMPS < >,
                               SUBJ < > ],
                       POSTHEAD -,
                       HEAD.MOD < [ LOCAL [ CONT.HOOK [ XARG #xarg,
							INDEX.E.ASPECT perf-and-prog ],
					    CAT [ HEAD +vjp,
                                                  VAL [ SUBJ cons,
                                                        COMPS null ] ] ] ] > ] ] ].

;; DVM 2015-09-18: "belum" is the same as negative adverb "tidak" with perfect aspect "sudah"
n+asp-lex := neg-adv-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT perf ].

;; DVM 2015-05-09: added to negate adverb of manners
;; DVM 2015-05-09: e.g. mereka berjalan tidak cepat (lit. they walk not fast)
neg-adv-adv-lex := basic-scopal-adverb-lex &
  [ SYNSEM.LOCAL.CAT [ VAL [ SPR < >,
                             COMPS < >,
                             SUBJ < > ],
                       POSTHEAD -,
                       HEAD.MOD < [ LOCAL.CAT [ HEAD adv,
                                                POSTHEAD + ] ] > ] ].

; We treat question particles as complementizers.
; Here is the lexical type for complementizers.

complementizer-lex-item := raise-sem-lex-item & basic-one-arg &
  [ SYNSEM.LOCAL.CAT [ HEAD comp &
                            [ MOD < > ],
                       VAL [ SPR < >,
                             SUBJ < >,
                             COMPS < #comp > ] ],
    ARG-ST < #comp &
             [ LOCAL.CAT [ MC +,
                           HEAD verb,
                           VAL [ SUBJ < >,
                                 COMPS < > ] ] ] > ].

; Subtype for question particles. Constrains SF to ques.

qpart-lex-item := complementizer-lex-item &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.SF ques,
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Lexical rule types

n-enclitic-lex-rule-super := same-non-local-lex-rule &
			     same-modified-lex-rule &
			     same-light-lex-rule &
			     same-ctxt-lex-rule &
			     same-cont-lex-rule &
			     same-agr-lex-rule &
			     same-head-lex-rule &
			     same-hc-light-lex-rule &
			     same-posthead-lex-rule &
			     same-mc-lex-rule &
			     infl-lex-rule & 
  [ SYNSEM.LOCAL.CAT.VAL [ SPR <>,
			   SUBJ <>,
			   COMPS <>,
			   SPEC <> ],
    C-CONT.ICONS <! !>,
    DTR common-noun-lex ].

nya-lex-rule := n-enclitic-lex-rule-super.

ku-lex-rule := n-enclitic-lex-rule-super.

mu-lex-rule := n-enclitic-lex-rule-super.

; DVM 2017-03-23: added transitive-verb-lex for active voice
active-voice-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & transitive-verb-lex &
  [ INFLECTED.VOICE-FLAG +,
    DTR tr-verb-lex ].

; DVM 2017-03-23: for passive type 1
passive-voice-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & passive-verb-lex &
  [ INFLECTED.VOICE-FLAG +,
    DTR tr-verb-lex ].

act-lex-rule := active-voice-lex-rule-super.

pas-lex-rule := passive-voice-lex-rule-super.

;adj-superlative-lex-rule :=

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

;basic-head-1st-comp-phrase :+ [ SYNSEM.L-PERIPH - ].

head-comp-phrase := basic-head-1st-comp-phrase & head-initial.

;head-comp-phrase := basic-head-1st-comp-phrase & head-initial &
;  [ SYNSEM.LOCAL.CAT.HC-LIGHT - ].

subj-head-phrase := decl-head-subj-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

;;; DVM 2015-05-09: from zhong
;;; NUM + CL is being joined by head-spec-hs
;;; CLphrase + N is being joined by adj-int
;head-spec-h-sem-phrase := basic-head-spec-phrase & head-final &
;  [ HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD noun,
;                            CONT.HOOK #hook ],
;    C-CONT.HOOK #hook ].

;head-spec-hs := head-spec-h-sem-phrase.

;;; DVM 2015-08-11: from compling grammar engineering page
; verb-lex-supertype := main-verb-lex & transitive-lex-item.
#|
copula-verb-lex := indonesian-verb-lex & trans-first-arg-raising-lex-item-2 &
  [ SYNSEM.LOCAL [ CAT.VAL [ SUBJ < #subj >,
                             COMPS < #comps >,
                             SPR < >,
                             SPEC < > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CONT.HOOK.INDEX #xarg,
                       CAT [ VAL [ SPR < >,
                                   COMPS < > ],
                             HEAD noun ] ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ COMPS < > ],
                           HEAD adj ] ] > ].
|#

;; SSH & DVM 2016-02-17 : added rule for copula verbs "adalah" and "ialah"
;; with PP complement
cop-pp-lex := non-mod-lex-item & trans-first-arg-raising-lex-item-2 &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb & 
			      [ AUX + ],
                   	VAL [ SUBJ < #subj >,
                   	      COMPS < #comps >,
                   	      SPR < >,
                   	      SPEC < > ] ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CONT.HOOK.INDEX #xarg,
               	       CAT [ VAL [ SPR < >,
                                   COMPS < > ],
                             HEAD noun ] ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ COMPS < > ],
                           HEAD adp ] ] > ].

cop-adalah-pp-lex := cop-pp-lex.

;; SSH & DVM 2016-02-17 : "ialah" can only appear with 3rd person subject
cop-ialah-pp-lex := cop-pp-lex &
 [ SYNSEM.LOCAL [ CAT.VAL.SUBJ < [ LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ] > ]].

;; DVM 2016-07-09 : added rule for copula verbs "adalah" with adjective complement
cop-adj-lex := non-mod-lex-item & trans-first-arg-raising-lex-item-2 &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb & 
			      [ AUX + ],
                   	VAL [ SUBJ < #subj >,
                   	      COMPS < #comps >,
                   	      SPR < >,
                   	      SPEC < > ] ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CONT.HOOK.INDEX #xarg,
               	       CAT [ VAL [ SPR < >,
                                   COMPS < > ],
                             HEAD noun ] ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ SUBJ < #subj >,
				 COMPS < > ],
                           HEAD adj ] ] > ].

cop-adalah-adj-lex := cop-adj-lex.

cop-ada-adj-lex := cop-adj-lex.

;; FCB & DVM 2015-10-28: copula verbs with NP complement, inherit from transitive verbs
cop-verb-lex :=  transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ OPT - ] > ].

;; "menjadi"
v_np_cop_le := cop-verb-lex.

;; DVM 2016-02-13: "merupakan" cannot appear with proper names, demonstratives, or pronouns as complement
;; DVM 2016-02-21: "merupakan" can occur with sudah, sedang, and akan
v_np_cop_common_le := cop-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD commonnoun ] > ].

;; FCB & DVM 2015-10-28: "adalah" and "ialah" cannot take aspect markers and cannot be in future tense
v_np_cop_noasp_le := cop-verb-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E [ ASPECT nonaspect ,
				     TENSE nonfuture ] ].

;; FCB & DVM 2015-10-28: "ialah" can only appear with 3rd person subject
v_np_cop_3_le := v_np_cop_noasp_le &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG.PNG.PERNUM 3rd ].

; SSH 2014-09-26: Only phrases can be the subjects (phr-synsem)
;subj-head-phrase := decl-head-subj-phrase & head-final &
;  [ SYNSEM.LOCAL.CAT.MC #mc,
;    SYNSEM.SPART #spart,
;    HEAD-DTR.SYNSEM.LOCAL.CAT [ MC #mc,
;				VAL [ SPR olist,
;				      COMPS < > ],
;				POSTHEAD + ],
;    HEAD-DTR.SYNSEM.SPART #spart,
;    NON-HEAD-DTR.SYNSEM  [ R-PERIPH na-or--,
;			   INTERJECTED na-or--,
;			   LOCAL [ CAT [ MC +,
;					 NONSUBJ -,
;					 VAL.SPR <> ] ],
;			   NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
;				       REL 0-dlist ] ] ].

;subj-head-phrase := decl-head-subj-phrase & head-final &
;  [ SYNSEM [ LOCAL.CAT.MC +,
;             NON-LOCAL.SLASH 0-dlist ],
;    HEAD-DTR.SYNSEM [ L-PERIPH -,
;                      LOCAL.CAT.VAL.COMPS < > ] ].

;subj-head-nmc-phrase := basic-head-subj-nmc-phrase & head-final &
;  [ SYNSEM.LOCAL.CAT.MC -,
;    HEAD-DTR.SYNSEM.NON-LOCAL.SLASH.LIST < [ CONT.HOOK.ICONS-KEY focus-or-topic ] > ].

;infostr-dislocated-phrase := narrow-focus &
;  [ SYNSEM.LOCAL.CAT [ MC +,
;                       VAL.SUBJ < > ],
;    C-CONT [ RELS <! !>, HCONS <! !>,
;	     ICONS <! info-str & #icons &
;                    [ IARG2 #index,
;                      IARG1 #clause ] !> ],
;    HEAD-DTR.SYNSEM.LOCAL [ CAT [ MC -,
;                                  HEAD verb ],
;                            CONT.HOOK [ INDEX #clause,
;                                        CLAUSE-KEY #clause ] ],
;    NON-HEAD-DTR.SYNSEM [ LIGHT -,
;                          LOCAL [ CAT.HEAD +np,
;                                  CONT.HOOK [ INDEX #index,
;                                              ICONS-KEY #icons ] ] ] ].

;infostr-filler-head-phrase := basic-head-filler-phrase & infostr-dislocated-phrase & head-final &
;  [ SYNSEM.L-PERIPH +,
;    HEAD-DTR.SYNSEM [ L-PERIPH -,
;                      LOCAL.CAT.VAL.SUBJ < > ],
;    NON-HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.ICONS-KEY topic ].

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

;; FCB, DVM & LMC 2016-05-06 : add COORD - so that bare-np-phrase cannot combine with zero-cop-rule
bare-np-phrase := basic-bare-np-phrase &
  [ SYNSEM.LOCAL.COORD -,
    C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].

;bare-np-phrase := basic-bare-np-phrase &
;  [ C-CONT.RELS <! [ PRED exist_q_rel ] !> ].

;;;;;;;;;;;;;;;;;;
;;; Coordination
;;;;;;;;;;;;;;;;;;

;;; Coordination Strategy 1

n1-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-bottom-coord-rule := conj-first-bottom-coord-rule & n-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1

np1-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-bottom-coord-rule := conj-first-bottom-coord-rule & np-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1
;; FCB, DVM & LMC 2016-05-06: added EMPTY - so that verbs cannot combine with zero-cop-rule

vp-coord-phrase :+  [ LCOORD-DTR.SYNSEM.LOCAL.CAT.HEAD.EMPTY bool,
    		      RCOORD-DTR.SYNSEM.LOCAL.CAT.HEAD.EMPTY - ].

vp-bottom-coord-phrase :+  [ CONJ-DTR.SYNSEM.LOCAL.CAT.HEAD.EMPTY -,
    		      	     NONCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD.EMPTY - ].

vp1-top-coord-rule := basic-vp-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

vp1-mid-coord-rule := basic-vp-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

vp1-bottom-coord-rule := conj-first-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1

s1-top-coord-rule := basic-s-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

s1-mid-coord-rule := basic-s-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

s1-bottom-coord-rule := conj-first-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;:begin :instance.
;:include "indonesian_add2".
;:end :instance.

;;; Verbs

clausal-comp-verb-lex := main-verb-lex & clausal-second-arg-trans-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps & 
				 [ LOCAL.CAT [ HEAD +vc & [ FORM finite ],
					       VAL [ SUBJ < >,
						     COMPS < > ]]] >,
    ARG-ST.REST.FIRST #comps ].

prop-comp-verb-lex := clausal-comp-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CONT.HOOK.INDEX.SF prop ].

ques-comp-verb-lex := clausal-comp-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL [ CAT.HEAD comp,
					     CONT.HOOK.INDEX.SF ques ]].

;; DVM 2015-09-21: trans-first-arg-raising-lex-item-1 is changed to trans-first-arg-raising-lex-item-2 
locative-verb-lex := verb-lex & trans-first-arg-raising-lex-item-2 &
  [ SYNSEM.LOCAL [ CAT.VAL [ SUBJ < #subj >,
                             COMPS < #comps >,
                             SPR < >,
                             SPEC < > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun,
                             VAL [ SPR < >,
                                   COMPS < > ] ],
                       CONT.HOOK.INDEX #xarg ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ COMPS < > ],
                           HEAD adp ] ] > ].

trans-first-arg-raising-verb := main-verb-lex & trans-first-arg-raising-lex-item & no-hcons-lex-item &
  [ SYNSEM [ LKEYS.KEYREL arg1-relation & [ ARG1 #arg1 ],
		LOCAL [ CAT.VAL [ SPR < >,
                            SPEC < >,
                            COMPS < #comps >,
                            SUBJ < #subj > ],
                  CONT.HOOK.XARG #xarg ] ],
    ARG-ST < #subj &
            [ LOCAL [ CAT [ HEAD noun,
                            VAL [ SUBJ < >,
                                  SPR < >,
                                  SPEC < >,
                                  COMPS < > ] ],
                      CONT.HOOK.INDEX #xarg ] ],
            #comps &
            [ LOCAL [ CONT.HOOK.INDEX #arg1,
			CAT [ HEAD verb &
                                [ AUX - ],
                          VAL [ COMPS < >,
                                SPR < >,
                                SPEC < >,
                                SUBJ < [ ] > ] ] ] ] > ].

;; DVM 2016-05-17: add ASPECT perf-and-prog so that the control verb cannot take copulas as the complement
;; such as "saya mau adalah ..." cannot be parsed
;; copulas "adalah" and "ialah" have ASPECT nonaspect
;; control verbs need the ASPECT to be perf-and-prog
;; so copulas "adalah", "ialah" cannot be the complement of any control verbs
trans-first-arg-control-verb := main-verb-lex & trans-first-arg-control-lex-item & 
  [ SYNSEM [ 
		LOCAL [ CAT.VAL [ SPR < >,
                            SPEC < >,
                            COMPS < #comps >,
                            SUBJ < #subj > ] ] ],
    ARG-ST < #subj &
            [ LOCAL [ CAT [ HEAD noun,
                            VAL [ SUBJ < >,
                                  SPR < >,
                                  SPEC < >,
                                  COMPS < > ] ] ] ],
            #comps &
            [ LOCAL [ CONT.HOOK.INDEX.E.ASPECT perf-and-prog,
			CAT [ HEAD verb &
                                [ AUX - ],
                          VAL [ COMPS < >,
                                SPR < >,
                                SPEC < >,
                                SUBJ < [ ] > ] ] ] ] > ].

ditrans-first-arg-control-verb := main-verb-lex & basic-three-arg & basic-icons-lex-item &
  [ SYNSEM [ LKEYS.KEYREL [ ARG1 #ind1,
                            ARG2 #ind2,
                            ARG3 #harg ],
	     LOCAL [ CONT [ HOOK.CLAUSE-KEY #clause,
			   HCONS <! qeq & [ HARG #harg,
					    LARG #larg ] !> ],
                     CAT.VAL [ SPR < >,
                            SPEC < >,
                            COMPS < #comp1, #comp2 >,
                            SUBJ < #subj > ] ] ],
    ARG-ST < #subj &
            [ LOCAL [ CONT.HOOK [ INDEX ref-ind & #ind1,
				  ICONS-KEY.IARG1 #clause,
				  CLAUSE-KEY #clause ],
		      CAT [ HEAD noun,
                            VAL [ SUBJ < >,
                                  SPR < >,
                                  SPEC < >,
                                  COMPS < > ] ] ] ],
	    #comp1 & [ LOCAL.CONT.HOOK [ INDEX #ind2,
				  ICONS-KEY.IARG1 #clause,
				  CLAUSE-KEY #clause ] ],
            #comp2 &
            [ LOCAL [ CONT.HOOK [ XARG #ind1,
				  LTOP #larg,
				  ICONS-KEY.IARG1 #clause,
				  CLAUSE-KEY #clause ],
			CAT [ HEAD verb &
                                [ AUX - ],
                          VAL [ COMPS < >,
                                SPR < >,
                                SPEC < >,
                                SUBJ < [ ] > ] ] ] ] > ].

ditrans-second-arg-control-verb := main-verb-lex & ditrans-second-arg-control-lex-item & 
  [ SYNSEM [ 
		LOCAL [ CAT.VAL [ SPR < >,
                            SPEC < >,
                            COMPS < #comp1, #comp2 >,
                            SUBJ < #subj > ] ] ],
    ARG-ST < #subj &
            [ LOCAL [ CAT [ HEAD noun,
                            VAL [ SUBJ < >,
                                  SPR < >,
                                  SPEC < >,
                                  COMPS < > ] ] ] ],
	    #comp1 & [],
            #comp2 &
            [ LOCAL [ 
			CAT [ HEAD verb &
                                [ AUX - ],
                          VAL [ COMPS < >,
                                SPR < >,
                                SPEC < >,
                                SUBJ < [ ] > ] ] ] ] > ].

ditrans-second-arg-raising-verb := main-verb-lex & ditrans-second-arg-raising-lex-item & 
  [ SYNSEM [ 
		LOCAL [ CAT.VAL [ SPR < >,
                            SPEC < >,
                            COMPS < #comp1, #comp2 >,
                            SUBJ < #subj > ] ] ],
    ARG-ST < #subj &
            [ LOCAL [ CAT [ HEAD noun,
                            VAL [ SUBJ < >,
                                  SPR < >,
                                  SPEC < >,
                                  COMPS < > ] ] ] ],
	    #comp1 & [],
            #comp2 &
            [ LOCAL [ 
			CAT [ HEAD verb &
                                [ AUX - ],
                          VAL [ COMPS < >,
                                SPR < >,
                                SPEC < >,
                                SUBJ < [ ] > ] ] ] ] > ].

;; verb types added from ERG
;; need to be modified

; <type val="v_np_ntr_le">
; <description>Cmps NP(obl), no psv             
; <ex>B remains C.
; <nex>
; <todo>
; </type>
v_np_ntr_le := main-verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps & [ OPT - ] >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

; <type val="v_pp*_dir_le">
; <description>Cmps PP(opt,dir)                 
; <ex>B crept into the room.
; <nex>
; <todo>
; </type>
v_pp*_dir_le := main-verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD adp ] ] > ].

; Temporary patch for e.g. 'take' which has an optional ARG3 role, which
; needs to be present so generator won't spuriously fill it.
; <type val="v_np_noarg3_le">
; <description>Cmps NP(obl), only two args      
; <ex>B took the book.
; <nex>
; <todo>
; </type>
v_np_noarg3_le := main-verb-lex & ditransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comp1, #comp2 >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comp1 &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ],
             #comp2 &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

ditransitive-verb-lex := main-verb-lex & ditransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comp1, #comp2 >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comp1 &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ],
             #comp2 &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD adp ] ] > ].

;; takes dir_state_modable_rel oblique complement.
;; put (takes variety of PP complements, so avoid chart dependency filter)
; <type val="v_np-pp_prop_le">
; <description>Cmps NP(obl),PP(obl), state rslt 
; <ex>B put C on D.
; <nex>
; <todo>
; </type>
v_np-pp_prop_le := ditransitive-verb-lex.

; <type val="v_np-pp_e_le">
; <description>Cmps NP(obl),PP(sel.obl)         
; <ex>B compared C with D.
; <nex>
; <todo>
; </type>
v_np-pp_e_le := ditransitive-verb-lex & 
  [ SYNSEM [ LOCAL.CAT [ VAL.COMPS < [ OPT - ], [ OPT - ] > ] ] ].

; <type val="v_cp_prop_le">
; <description>Cmps S (fin/inf, -Q, opt cmplzr) 
; <ex>B hoped (that) C won. 
; <nex>
; <todo>
; </type>
v_cp_prop_le := prop-comp-verb-lex.

; verb with preposition
v_pp_le := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT [ VAL.COMPS < [ OPT - ] > ] ].

;;; Complementizers

;complementizer-lex-item := raise-sem-lex-item & basic-one-arg &
;  [ SYNSEM.LOCAL.CAT [ HEAD comp,
;		       VAL [ SUBJ < >,
;			     SPR < >,
;			     COMPS < #comps &
;				     [ LOCAL.CAT [ HEAD verb,
;						   VAL.SUBJ < > ]] > ]],
;    ARG-ST < #comps > ].

propcomp-lex-item := complementizer-lex-item &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.SF prop ].

;qpart-lex-item := complementizer-lex-item &
;  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.SF ques,
;                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

;; DVM 2016-02-13: the HEAD was changed from noun to pronoun to accommodate restrictions on "merupakan"
noun+det-lex-item := norm-hook-lex-item & non-mod-lex-item &
 [ SYNSEM [LOCAL [ CAT [ HEAD pronoun &
			      [ EMPTY + ],
			 VAL [ SPR < >,
			       COMPS < >,
			       SUBJ < >,
			       SPEC < > ]],
		   CONT [RELS <! relation &
			       [LBL #nh,
				ARG0 #s ],
			       quant-relation & #det &
			       [ARG0 #s,
				RSTR #h ]!>,
			 HCONS <! qeq &
				[HARG #h,
				 LARG #nh ]!> ]],
	   LKEYS [ KEYREL relation,
		   ALTKEYREL #det ]]].

n+det-lex := noun+det-lex-item.

;; DVM 2015-10-28: "bukan" is the same as negative adverb "tidak" with copula "adalah" or "ialah"
;; FCB & DVM 2016-05-17: treat "bukan" as a (copula) verb 
;; the head is a copula (KEYREL) and the daughter is neg_rel (ALTKEYREL) 
;; which has an event-relation to make the ARG0 event (see matrix.tdl: event-relation)
;; the subject is a noun and the complement is a noun too.
;; DVM 2016-09-30: head of the complement is NP or PP
neg+cop-lex-item := verb-lex &
 [ SYNSEM [LOCAL [ CAT [ HEAD.AUX -,
                         VAL [ SPR < >,
                               SPEC < >,
                               SUBJ < #subj >,
			       COMPS < #comp > ] ],
		   CONT [ HOOK [ LTOP #nh,
				 INDEX #s,
				 XARG #xarg ],
			  RELS <! #cop &
				[ LBL #h,
				  ARG0 #s,
				  ARG1 #xarg,
				  ARG2 #compindex ],
				#neg & event-relation &
				[ LBL #nh,
				  ARG1 #scopehandle ] !>,
			  HCONS <! qeq &
				 [ HARG #scopehandle,
				   LARG #h ] !> ]],
	   LKEYS [ KEYREL #cop,
		   ALTKEYREL #neg ]],
   ARG-ST < #subj &
	    [ LOCAL [ CAT [ HEAD noun ,
			    VAL [ SPR < >,
				  COMPS < > ] ],
		      CONT.HOOK.INDEX #xarg ] ],
	    #comp &
	    [ LOCAL [ CAT [ HEAD +np ,
			    VAL [ SPR < >,
				  COMPS < > ] ],
		      CONT.HOOK.INDEX #compindex ] ] > ].

n+cop-lex := neg+cop-lex-item.

;; DVM 2015-10-16: "kini" is decomposable to "saat ini" (this time)
; n+det-lex+adv := noun+det-lex-item & adverb-lex.

;;; Adverbs
;; DVM 2015-05-09: basic-int-adverb-lex is changed to basic-scopal-adverb-lex because of updates in matrix.tdl

;;redefining the types in matrix.tdl. Taken out raise-index-mod-lex-item from basic-adverb-lex and put it in basic-scopal-adverb-lex. 
basic-adv-lex :=  single-rel-lex-item & basic-icons-lex-item &
  [ SYNSEM [ LOCAL.CAT.HEAD adv,
	     LKEYS.KEYREL event-relation ]].

;;add in norm-hook-lex-item, so that it's keyrel.arg0 is its hook.index
;;Its ARG1 refers to what it modifies, through XARG. CONT.HOOK.XARG #ind
basic-int-adv-lex := basic-adv-lex & intersective-mod-lex & norm-hook-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CONT.HOOK.INDEX #ind ] >,
                           VAL.SUBJ < > ], 
                     CONT.HOOK.XARG #ind ],
	     NON-LOCAL.SLASH 0-dlist,
             LKEYS.KEYREL.ARG1 #ind ] ].

adverb-lex := basic-int-adv-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT [ VAL [ SUBJ < [ ], ... >,
							  COMPS < > ],
						    HEAD verb ] ]>,
			   VAL [ SPR < >,
				 SUBJ < >,
				 COMPS < >,
				 SPEC < > ] ]]]].

adverb-scop-lex:= basic-scopal-adverb-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT [ VAL [ SUBJ < [ ], ... >,
							  COMPS < > ],
						    HEAD verb ] ]>,
			   VAL [ SPR < >,
				 SUBJ < >,
				 COMPS < >,
				 SPEC < > ] ]]]].
adverb-post-lex := adverb-lex &
  [ SYNSEM.LOCAL.CAT.POSTHEAD + ].

adverb-pre-lex := adverb-lex &
  [ SYNSEM.LOCAL.CAT.POSTHEAD - ].

adverb-time-lex := basic-scopal-adverb-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT [ VAL [ COMPS < > ],
						    HEAD verb ] ]>,
			   VAL [ SPR < >,
				 SUBJ < >,
				 COMPS < >,
				 SPEC < > ] ]]]].

;;; Adpositions
;; DVM 2016-07-09 : add information in SUBJ, connect ARG1 #xarg to INDEX in SUBJ, add ARG-ST.FIRST #subj
;; DVM 2016-07-09 : in order to parse "Budi di rumah"
;; DVM 2016-07-09 : "intransitive-lex-item" no need to be added, otherwise "Budi tidur di rumah" (PP as adv) cannot be parsed
;; DVM 2016-07-09 : in roots.tdl, add +p to the HEAD of root, meaning that preposition can be the head of a clause

;; Question to Francis: how to change adp-nomod to adp-mod?
adposition-nomod-lex := basic-nomod-adposition-lex & transitive-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
			     SPEC < >,
			     SUBJ < #subj >,
                             COMPS < #comps > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun,
                             VAL [ SPR < >,
                                   COMPS < > ] ],
                       CONT.HOOK.INDEX #xarg ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
				 COMPS < > ],
                           HEAD noun ] ] > ].

adposition-lex := adposition-nomod-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

; DVM 2017-03-23 : for oleh in passive construction, semantically empty
;adposition-particle-lex := adposition-nomod-lex &
;  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

adposition-mod-lex := intersective-mod-lex & norm-ltop-lex-item & intransitive-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT [ HEAD +nv,
                                                    VAL.SPR cons ]]>,
			   POSTHEAD + ]]]].

adp-to-attr-rule := const-lex-rule &
		    same-cont-lex-rule & 
		    same-ctxt-lex-rule &
		    same-agr-lex-rule &
		    adposition-mod-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CONT.HOOK.INDEX #x1 ] > ] ] ],
    DTR adposition-lex &
    [ SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ < [ LOCAL.CONT.HOOK.INDEX #x1 ] > ] ] ] ] ] ].

;;;;;;;;;;;;;;;;;;;;

can-aux := basic-verb-lex & trans-first-arg-raising-lex-item-1 & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT [ VAL [ SUBJ < #subj >,
                             COMPS < #comps >,
                             SPR < >,
                             SPEC < > ],
                       HEAD verb &
                            [ AUX + ] ],
    ARG-ST < #subj &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ SUBJ < [  ] >,
                                 COMPS < > ],
                           HEAD verb &
                               [ AUX -] ] ] > ] .

;; DVM 2015-09-23: added redup-lex-rule from zhong-lextypes.tdl
;; DVM 2015-09-23: deleted things which are not relevant in INDRA, added common-noun-lex to make reduplicated nouns compatible with enclitics =nya etc.
;; DVM 2017-02-21: added [ CARDIN + ] so that "ada dua buku-buku" cannot be parsed
redup-noun-lex-rule :=  same-non-local-lex-rule & common-noun-lex &
		   same-modified-lex-rule &
		   same-light-lex-rule &
		   same-ctxt-lex-rule &
		   same-cont-lex-rule &
		   same-agr-lex-rule & 
                   infl-lex-rule & 
 [ SYNSEM [ LOCAL [ CAT [ MC luk,
			  HEAD #head & [ CARDIN + ], 
			  VAL #val, 
			  POSTHEAD #posthead ],
		    CONT.HOOK.INDEX.PNG.PERNUM pl ] ],
   DTR word-or-lexrule & [ SYNSEM [ LOCAL [ CAT [ HEAD #head, 
					        VAL #val,
					        POSTHEAD #posthead ] ] ] ],
   C-CONT [ HCONS <! !>, 
            ICONS <! !>,
            RELS <! !> ] ].

;; DVM 2015-10-21: reduplicated nouns with -an.
;redup-noun-lex-rule :=  same-non-local-lex-rule & common-noun-lex &
;		   same-modified-lex-rule &
;		   same-light-lex-rule &
;		   same-ctxt-lex-rule &
;		   same-cont-lex-rule &
;		   same-agr-lex-rule & 
;                   infl-lex-rule & 
; [ SYNSEM [ LOCAL [ CAT [ MC luk,
;			  HEAD #head, 
;			  VAL #val, 
;			  POSTHEAD #posthead ] ] ],
;   DTR word-or-lexrule & [ SYNSEM [ LOCAL [ CAT [ HEAD #head, 
;					        VAL #val,
;					        POSTHEAD #posthead ],
;                                          CONT.HOOK [ LTOP #ltop,
;                                                      INDEX #index ] ] ] ],
;   C-CONT [ HCONS <! !>, 
;            ICONS <! !>,
;            RELS <! [ PRED "fake_rel",
;		      ARG0 #x, 
;		      LABEL #ltop,
;		      INDEX #index ] !> ] ].

;; DVM 2015-10-21: added redup-adj-lex-rule, reduplicated adjectives should unite with plural nouns
;; DVM 2016-02-15: "adj-pred-lex" was changed to "adjective-lex"
redup-adj-lex-rule := same-non-local-lex-rule & adjective-lex &
		   same-modified-lex-rule &
		   same-light-lex-rule &
		   same-ctxt-lex-rule &
		   same-cont-lex-rule &
		   same-agr-lex-rule & 
                   infl-lex-rule & 
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ < [ LOCAL.CONT.HOOK.INDEX.PNG.PERNUM pl ] > ,
    DTR adjective-lex ].

;; DVM 2015-10-21: added redup-adv-lex-rule
#|
redup-adv-lex-rule := same-non-local-lex-rule & adverb-post-lex &
		   same-modified-lex-rule &
		   same-light-lex-rule &
		   same-ctxt-lex-rule &
		   same-cont-lex-rule &
		   same-agr-lex-rule & 
                   infl-lex-rule & 
		   same-head-lex-rule.
|#

;; DVM 2016-02-16 : added information of ASPECT nonaspect and TENSE nonfuture
;; so that *Budi sudah/sedang/akan guru cannot be parsed.
;; FCB, DVM & LMC 2016-05-06 : add COORD - so that "nasi" in "Adi makan nasi" cannot have "zero copula"
zero-cop-rule := unary-phrase &
 [ SYNSEM.LOCAL [ CONT [ HOOK [ INDEX #v0 &
				      [ E [ ASPECT nonaspect ,
					    TENSE nonfuture ] ],
                                LTOP #vl,
                                XARG #x1 ] ],
		  COORD -,
                  CAT [ HEAD verb &
			     [ EMPTY + ],
                        VAL [ COMPS < >,
                              SPR < >,
                              SPEC < >,
                              SUBJ < [ LOCAL [ CAT [ HEAD noun,
						     VAL [ SPR < >,
                                     			   COMPS < > ] ],
                           		       CONT.HOOK.INDEX #x1 ] ] > ] ] ] ,
   ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD noun &
				      [ EMPTY - ],
                                 VAL [ SPR < >,
                                       COMPS < > ] ],
                           CONT.HOOK.INDEX #x2,
			   COORD - ] ] > ,
   C-CONT [ RELS <! [ LBL #vl,
                      PRED cop_v_zero_rel,
                      ARG0 #v0,
                      ARG1 #x1,
                      ARG2 #x2 ] !> ] ].

;; SSH & DVM 2016-02-17 : a new rule for zero copula with pp locative complement
;; DVM 2016-05-06: add COORD - based on zero-cop-rule for noun

#|
zero-cop-pp-rule := unary-phrase &
 [ SYNSEM.LOCAL [ CONT [ HOOK [ INDEX #v0,
                                LTOP #vl,
                                XARG #x1 ] ],
		  COORD -,
                  CAT [ HEAD verb &
			     [ EMPTY + ],
                        VAL [ COMPS < >,
                              SPR < >,
                              SPEC < >,
                              SUBJ < [ LOCAL [ CAT [ HEAD noun,
						     VAL [ SPR < >,
                                     			   COMPS < > ] ],
                           		       CONT.HOOK.INDEX #x1 ] ] > ] ] ] ,
   ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD adp &
				      [ EMPTY - ],
                           	 VAL [ SPR < >,
                                       COMPS < > ] ],
                           CONT.HOOK #hook,
			   COORD - ] ] > ,
   C-CONT [ HOOK #hook,
	    RELS <! !>, 
	    HCONS <! !>, 
	    ICONS <! !> ] ].
|#

;; Existential ada
;; DVM 2016-05-16 : add a rule for existential verb "ada" based on the one in Zhong
;; DVM 2016-07-09 : The head is a verb "ada" and takes 1 argument: a noun
;; FCB & DVM 2016-05-17: add OPT - for the first obligatory argument
;; also add EMPTY - to get rid of zero copula rule -> for previous ARG2
;; zero copula rule with HEAD EMPTY + cannot combine with HEAD EMPTY - -> for previous ARG2
v_exist-lex := basic-one-arg-no-hcons & verb-lex & basic-verb-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verb,
			   VAL [ SUBJ < >,
                     	         COMPS #comps ] ],
             	     CONT [ HOOK [ LTOP #lbl,
                    		   INDEX #event ],
                    	    RELS <! #keyrel !> ] ],
             LKEYS.KEYREL #keyrel &
                  	 [ LBL #lbl,
                	   ARG0 #event,
                	   ARG1 #arg1 ] ],
    ARG-ST #comps &
         < [ LOCAL [ CAT [ VAL [ SPR < >,
                   		 COMPS < > ],
                     	   HEAD noun ],
               	     CONT.HOOK.INDEX #arg1 ],
	     OPT - ] > ].

v_ada_np_lex := v_exist-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < > ]]]].

#|
proper-name-lex := basic-one-arg & basic-icons-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD propername,
			   VAL [ COMPS < >,
				 SUBJ < >,
				 SPR < > ] ],
		     CONT [ HOOK.INDEX #index &
					[ PNG.PERNUM sg ],
			    RELS <! relation & #keyrel & 
				  [ LBL #larg,
				    ARG0 #index ],
				  quant-relation &
				  [ PRED "proper_q_rel",
				    ARG0 #index,
				    RSTR #harg ] !>,
			    HCONS <! qeq & 
				   [ HARG #harg,
				     LARG #larg ] !> ] ],
|#

v_np_ada_lex := intr-verb-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < > ]]]].

;; negative imperative "jangan" from zhong
imperative-aux-lex := subj-raise-aux-with-pred &
  [ SYNSEM.LOCAL [ CAT.VAL.COMPS.FIRST [ LOCAL.CAT.HEAD.FORM finite,
                                         OPT - ],
                   CONT.HOOK.INDEX.SF comm ],
    ARG-ST.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 2nd ].

neg-adv-imp-lex := imperative-aux-lex.

;; DVM 2016-05-17: added noun-noun compound from zhong
;; should add [CLASSIFIED na-or--] to prevent [satu ekor kucing] as in zhong
;; from being analyzed as a compound
noun-noun-compound-phrase := head-initial &
  [ SYNSEM [ LOCAL.CAT #cat,
             NON-LOCAL #nonloc ],
    HEAD-DTR.SYNSEM lex-synsem &
                [ LOCAL [ CAT #cat & 
                              [ HEAD noun,
                                VAL [ SPR < synsem >,
                                      COMPS < > ] ],
                          CONT.HOOK [ LTOP #ltop,
                                      INDEX #hind ] ],
                  NON-LOCAL #nonloc ],
    NON-HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD noun,
                                      VAL [ SPR < synsem >,
                                            COMPS < > ],
                                      POSTHEAD - ],
                                CONT.HOOK [ LTOP #larg,
                                            INDEX #nhind ] ],
    C-CONT [ HOOK [ LTOP #ltop,
            INDEX #hind ],
	     RELS <! quant-relation & [ PRED exist_q_rel,
					ARG0 #nhind,
					RSTR #harg ] !>,
             HCONS <! qeq & [ HARG #harg,
                              LARG #larg ] !>,
             ICONS <! noun-noun & [ IARG1 #hind, 
				    IARG2 #nhind ] !> ] ].

;; month names, need to be further constrained
n_-_month-lex := proper-name-lex.
n_-_day-lex := proper-name-lex.

;; for morning, night, hour, day, year
n_-_temp-lex := inanimate-noun-noun-lex.

;; for depan, belakang, etc.
relational-n-lex := inanimate-noun-noun-lex.

;; for cm, ha, m, kg, etc.
n_-_measure-lex := inanimate-noun-noun-lex.

;; for colors
adjective-color-lex := adjective-lex.

;; compound noun rule type
; #spr for "anjing kucing ini", "ini" modifies the head daughter "anjing"
; the specifier of NP is det for noun-head-daughter (see basic noun lex)
; C-CONT for semantics contribution
; we inherit from basic-binary-phrase in matrix.tdl
; empty lists: first equals last
; CONT.HOOK.INDEX to grab the index of the head noun
; about semantics: "cat dog is not a cat", cf. "red dog is red" cf "fake dog" is doglike, "cat dog" is "catlike"
; ARG0 was taken away bec we have "arg12-ev-relation" so the ARG0 is "event"
; compound_p_rel , p here is preposition, similar to "of" or "dari"
; we should be able to paraphrase "X Y" "X dari Y"
; exist_q_rel should be added later in RELS and HCONS
; if sth modifies sth else, the label should be the same but not sure what it means in the semantics to group everything with the same handle ex. 'red angry' dog
; "motte iku" has the same LBL
; if yes, LBL of compound should be the same as LBL in the head daughter
; bec it is a headed rule, we need #head
; In "I probably go", the syntactic head is "go", the semantic head is "probably"
; binary-headed-phrase
; DVM 2017-03-03 : added MODIFIED notmod-or-rmod & [ PERIPH na-or-+ ]
; so that INDRA cannot parse [[[dua]ADJ [ekor]N]N [anjing]N]NNCompound
; but instead [[dua]ADJ [[ekor]N [anjing]N]NNCompound]
compound-noun-phrase := head-initial &
 [ SYNSEM.LOCAL [ CAT.VAL [ SPR < #spr >,
                            COMPS < > ] ,
                  CONT.HOOK #head ],
   HEAD-DTR.SYNSEM [ MODIFIED notmod-or-rmod & [ PERIPH na-or-+ ],
                     LOCAL [ CAT [ HEAD noun,
                                 VAL [ SPR < #spr > ,
                                       COMPS < > ]] ,
                           CONT [ HOOK #head &
                                       [INDEX #externalargument,
                                        LTOP #lbl ]]]],
   NON-HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD noun,
                                     VAL [ SPR < [LOCAL.CAT.HEAD det] > ]],
                               CONT.HOOK.INDEX #internalargument ],
   C-CONT [ RELS <! arg12-ev-relation & 
                  [PRED compound_p_rel,
                   LBL #lbl,
                   ARG1 #externalargument,
                   ARG2 #internalargument] !>, HCONS <! !> ] ].

;; DPF 2014-08-01 - Added unary and binary bridging rules to accommodate robust
;; full-forest treebanking.  The strategy is to pump each normal edge in the
;; chart to a "bridge head" edge via the unary rule, and then combine two
;; adjacent such bridge-head edges using the binary rule.  This strategy,
;; proposed by Woodley Packard, results in a mere doubling of the number of
;; edges in each cell of the chart, rather than the square of the number of
;; normal edges that resulted from trying just a binary bridging rule that
;; accepted either bridge or normal edges.
;;
bridge-head := head-min &
  [ BRIDGED luk ].

bridge-binary-phrase := basic-binary-phrase &
  [ SYNSEM [ LOCAL [ CAT [ HEAD bridge-head & [ BRIDGED + ],
			   VAL [ SUBJ < >,
				 SPR < >,
				 COMPS < > ] ] ],
	     NON-LOCAL non-local-none ],
    C-CONT [ HOOK [ LTOP #lbl, INDEX #arg0 ],
	     RELS <! [ LBL #lbl, PRED "bridge_x_rel",
		       ARG0 #arg0, ARG1 #lind, ARG2 #rind ] !>,
	     HCONS <! !> ],
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD bridge-head & [ BRIDGED - ],
			    CONT.HOOK.INDEX #lind ] ],
	   [ SYNSEM.LOCAL [ CAT.HEAD bridge-head,
			    CONT.HOOK.INDEX #rind ] ] > ].

bridge-unary-phrase := basic-unary-phrase &
  [ SYNSEM [ LOCAL [ CAT [ HEAD bridge-head,
			   VAL [ SUBJ < >,
				 SPR < >,
				 COMPS < > ] ] ],
	     NON-LOCAL non-local-none ],
    C-CONT [ HOOK #hook,
	     RELS <! !>,
	     HCONS <! !> ],
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD head,
			    CONT.HOOK #hook ] ] > ].

;;;
;;; DVM 2017-01-09: added from Zhong, Rules for fragments
;;;

fragment_head := head.

;;; used in fragments
;;;
;;; do we need subtypes for different numbers of arguments
unknown_v_rel := predsort.

; For fragments (DPF FCB 2005-08-22) expect to appear in the Matrix any moment now
arg-ev-relation := event-relation &
 [ ARG semarg ].
unknown-v-relation := arg-ev-relation & 
 [ PRED unknown_v_rel ].

;;; (DPF and FCB 2009-02) Allow saturated valences to include zero pronouns
;;; maybe SPR is also olist?
saturated := valence & 
	     [SUBJ olist,
	      COMPS olist,
	      SPR null].
super-saturated := saturated & 
	     [SUBJ null,
	      COMPS null,
	      SPR null].

;;; The super type creates a proposition with an non-specified relation
;;; CHECKME: why should it be lexrule?  Isn't it just phrase?
;;; DVM 2017-02-21: "phrase-or-lexrule  & c-cont-1 &" was changed to "c-cont-1 &" because LKB had an error message "phrase-or-lexrule" is redundant, it is an ancestor of "c-cont-1"
;;;
super-frag-rule := c-cont-1 &
  [ INFLECTED infl-satisfied,
    SYNSEM [ LOCAL [ CAT [ HEAD fragment_head &
				[ MOD < > ],
                           VAL super-saturated & 
	     [SUBJ null,
	      COMPS null,
	      SPR null]] ],
	     NON-LOCAL [REL <! !>,
			QUE <! !>,
			SLASH  <! !>]],
    C-CONT [ HOOK [ LTOP #lbl,
		    INDEX #ind],
	     RELS  <! relation &
		    [ LBL #lbl,
		      ARG0 #ind ] !>,
	     HCONS <!  !> ], 
    ARGS.FIRST [INFLECTED infl-satisfied,
		SYNSEM [NON-LOCAL [REL <! !>,
				   QUE <! !>,
				   SLASH  <! !>]]]].

;; The basic type creates a proposition with an unknown_v_rel and and an ARG 

basic-frag-rule := super-frag-rule  &
 [ C-CONT [ RELS  <! unknown-v-relation !>]].

unary-frag-rule := basic-frag-rule & unary-phrase.

frag-np-rule := unary-frag-rule &
 [ ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD  noun & 
				       [EMPTY -],
				 VAL saturated],
			   CONT.HOOK.INDEX #ind]] >,
C-CONT.RELS.LIST.FIRST.ARG #ind ].

; "stand alone intersective adverb or pp"
frag-vmod-rule := unary-frag-rule &
"stand alone intersective adverb or pp"
 [  ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD +rp &
				       [MOD < synsem &
					      [ LOCAL intersective-mod  ] >],
				  VAL saturated],
			    CONT.HOOK [ LTOP #lbl,
					XARG #arg ] ] ] >,
    C-CONT.RELS <! [ LBL #lbl,
		     ARG0 #arg ] !> ].
